- is_complete = requirement.completed_by?(user: user)

tr(class="#{ is_complete ? 'completed' : 'pending' }")
  td.status
    - if is_complete
      span(data-toggle='tooltip', title=t('event_requirements.complete'))
        i.fas.fa-check  

  td.name(style="width:99%;")
    = requirement.description
    - if requirement.due_at.present?
      br
      small
        - if is_complete
          - # do nothing
        - elsif requirement.due_at.future?
          = t('registrations.submission_due_in', deictic: distance_of_time_in_words_to_now(requirement.due_at))
        - else
          = t('registrations.overdue_by', deictic: distance_of_time_in_words_to_now(requirement.due_at))

  td.description

  td.document_library_item
    - if requirement.document_library_item.present? && !is_complete
      = link_to rails_blob_path(requirement.document_library_item.document, disposition: 'attachment'), data: { toggle: 'tooltip' }, title: "Click to download the #{ requirement.document_library_item.name }", style: 'display: inline;' do
        i.fas.fa-cloud-download          

  td(class="event-requirement event-requirement-#{requirement.type} #{ is_complete ? 'event-requirement-complete' : 'event-requirement-incomplete' }")
    - if is_complete
    - elsif requirement.is_a?(DocumentEventRequirement)
      = link_to new_unit_event_requirement_event_submission_path(@unit, requirement, registration: registration), data: { toggle: 'tooltip' }, title: "Click to upload #{ user.first_name }'s completed #{ requirement.description }", style: 'display: inline;' do
        i.fas.fa-cloud-upload
    - elsif requirement.is_a?(FeeEventRequirement) && @unit.accepts_payments?
      = link_to new_unit_event_requirement_event_submission_path(@unit, requirement, registration: registration), data: { toggle: 'tooltip' }, title: t('registrations.cta_payment') do
        i.fal.fa-credit-card
