- if params[:reload] == 'true'
  #requirements
    ol.requirements
      = render partial: 'requirements/show/requirement', collection: @next_rank.requirements, locals: { include_checkboxes: true }

- else
  - crumbtrail link_to UnitPresenter.unit_display_name(@unit), unit_path(@unit)
  - crumbtrail link_to t('memberships.title_alt'), unit_memberships_path(@unit)
  - crumbtrail link_to @user.full_name, membership_path(@membership)
  - crumbtrail t('advancement.title')

  - content_for :title do
    = render partial: 'achievements/show/utilities' if @current_user_is_admin
    h4 = t('advancement.title')
    p Current rank: #{ @user.rank.name }
    h1 = @user.full_name

  #requirements
    h3
      = t('advancement.target_rank', rank: @next_rank.name)
      | &nbsp;
      .badge.badge-secondary
        = number_to_percentage(@user.rank.next_rank.progress_for(user: @user), precision: 0)

    ol.requirements
      = render partial: 'requirements/show/requirement', collection: @next_rank.requirements, locals: { include_checkboxes: true }

  - content_for :utilities do
    h3 = t('advancement.types.merit_badges')
    ul
      = render partial: 'achievements/show/merit_badge', collection: @user.merit_badges

  - if @unit.present? && @membership.present?
    javascript:
      function revealSubRequirements(item) {
        var $item = $(item);
        var sublist = $item.siblings('ol').first();
        sublist.toggle(150);
        $item.html($item.html() == 'See more' ? 'See less' : 'See more');
      }

      function recordAchievement(box) {
        var requirementId = $(box).val();
        var achievementId = $(box).attr('data-achievement');
        var childCount    = $(box).attr('data-children');

        if (childCount > 0) {
          alert('Complete all the sub-requirements and we\'ll check the box for you');
          event.preventDefault();
        } else if (achievementId == 0) {
          // POST a new achievement
          var path = "#{ membership_achievements_path(@membership) }";
          var json = ('{ "achievement" : { "achievable_id" : ' + requirementId + ' } }');
          $.ajax({
            type:         'POST',
            dataType:     'json',
            contentType:  'application/json',
            url:          path,
            data:         json,
            success:      function() {
              $('#requirements').load('/members/#{ @membership.id }/advancement #requirements');
            }
          });
        } else {
          // DELETE an existing achievement
          var path = '/advancement/' + achievementId;
          $.ajax({
            type:         'DELETE',
            dataType:     'json',
            contentType:  'application/json',
            url:          path,
          });
          $(box).attr('data-achievement', '0');
        }
      }
