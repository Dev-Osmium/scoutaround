- nesting_level ||= 0
- list_type = 'a' if nesting_level == 0
- achievement = Achievement.where(user: @user, achievable: requirement).first
- completed = requirement.completed_by?(user: @user) # || achievement.present?
- class_name = completed ? 'completed' : 'incomplete'

li(class="#{class_name}")
  - if @unit.present? && @membership.present?
    - if requirement.leaf?
      .custom-control.custom-checkbox
        = check_box_tag "requirement_#{ requirement.id }",            \
                        requirement.id,                               \
                        completed,                                    \
                        class: 'custom-control-input requirement',    \
                        onclick: 'recordAchievement(this);',          \
                        data: { achievement: achievement&.id || 0, children: requirement.requirements.count }

        i.fa-spinner.far.fa-spin(style="display:none;")
        = label_tag "requirement_#{ requirement.id }", requirement.name, class: 'custom-control-label'
    - elsif completed
      i.fa-check.fas
      | &nbsp;&nbsp;
      span.name = requirement.name
      | &nbsp;&nbsp;
      = link_to 'See more', '#', class: 'reveal', onclick: 'revealSubRequirements(this);'
    - else
      span.name = requirement.name
  - else
    = requirement.name

  - # recurse down a level if needed
  - if requirement.requirements.present?
    ol.requirements(type="#{ list_type }")
      = render partial: 'achievements/requirement', collection: requirement.requirements
